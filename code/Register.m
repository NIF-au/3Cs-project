function Register(tm, ri, transform,  fixed, moving, metric, reg)

% Description here.....
% tm: Path for transformation Matrix.
%   Example: '/mnt/nethomes/uqcgothg/Desktop/CT-data/affine_reg/ctmri_rigid_reg'
% ri: Path for registered Image
%   Example: '/mnt/nethomes/uqcgothg/Desktop/CT-data/affine_reg/ctmri_rigid_reg.nii'     
% tranform:   Can be 'Rigid', 'Affline' or 'SyN'.          
% fixed: Path for fixed images       
%   Example: 'path/mri_resize.nii'     
% moving: Path for moving images
%   Example: 'path/cmyk_rigid_reg.nii'
% metric:    Can be 'MI' or 'CC'.
% A description of the antsRegistration can be found here: 
% https://github.com/stnava/ANTs/wiki/Anatomy-of-an-antsRegistration-call

% Catharina Maria Hamer Holland - holland.cat@hotmail.com
% Christoffer Gøthgen - cgathg11@student.aau.dk
% Christos Zoupis Schoinas - xzoupis@gmail.com
% Andrew Janke - a.janke@gmail.com
% 
% Copyright 
% Catharina Maria Hamer Holland, Aalborg University.
% Christoffer Gøthgen, Aalborg University.
% Christos Zoupis Schoinas, Aalborg University.
% Andrew Janke, The University of Queensland.
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted,
% provided that the above copyright notice appear in all copies.  The
% authors and the Universities make no representations about the
% suitability of this software for any purpose.  It is provided "as is"
% without express or implied warranty.


%===================================MENU==================================%
if strcmpi(transform, 'SyN')
    if strcmpi(metric,'MI')
        prompt = {'Dimensionality','float', 'Interpolation', ...
                  'winsorize image intensities', 'use histogram matching', ...
                  'Num_trasmform', 'convergence', 'metric', 'shrink factors', ...
                  'smoothing sigmas'};
        dlg_title = 'Enter the parameter values';
        num_lines = 1;
        defaultans = {'3','0', 'Linear', '0.005 0.995', '0', '0.1 3 0', ...
                      '100 70 50 20 1e-6 10', '1 32 Regular 0.25', ...
                      '8 4 2 1', '3 2 1 0'};
    else
        prompt = {'Dimensionality','float', 'Interpolation', ...
                  'winsorize image intensities', 'use histogram matching', ...
                  'Num_trasmform', 'convergence', 'metric', 'shrink factors', ...
                  'smoothing sigmas'};
        dlg_title = 'Enter the parameter values';
        num_lines = 1;
        defaultans = {'3','0', 'Linear', '0.005 0.995', '0', '0.1 3 0', ...
                      '100 70 50 20 1e-6 10', '1 4', '8 4 2 1', '3 2 1 0'};
    end
else
    if strcmpi(metric,'MI')
        prompt = {'Dimensionality','float', 'Interpolation', ...
                  'winsorize image intensities', 'use histogram matching', ...
                  'Step Size', 'convergence', 'metric', 'shrink factors', ...
                  'smoothing sigmas'};
        dlg_title = 'Enter the parameter values';
        num_lines = 1;
        defaultans = {'3','0', 'Linear', '0.005 0.995', '0', '0.1', ...
                      '1000 500 250 100 1e-6 10', '1 32 Regular 0.25', ...
                      '8 4 2 1', '3 2 1 0'};
    else
        prompt = {'Dimensionality','float', 'Interpolation', ...
                  'winsorize image intensities', 'use histogram matching', ...
                  'Step size', 'convergence', 'metric', 'shrink factors', ...
                  'smoothing sigmas'};
        dlg_title = 'Enter the parameter values';
        num_lines = 1;
        defaultans = {'3','0', 'Linear', '0.005 0.995', '0', '0.1', ...
                      '1000 500 250 100 1e-6 10', '1 4', '8 4 2 1', '3 2 1 0'};
    end
end
    answer = inputdlg(prompt,dlg_title,[1 50],defaultans);
%=========================================================================%

%% Parameters
dimensionality = answer{1};
float = answer{2};
interpolation = answer{3};

%% winsorize-image-intensities
wii = answer(4);
wii = strsplit(wii{:}, ' ');
wii1 = wii{1};
wii2 = wii{2};  

%% use-histogram-matching 
uhm =  answer{5};       

%% transform

if strcmpi(transform, 'SyN')
    nt = answer(6);
    nt = strsplit(nt{:}, ' ');
    Notransform = nt{1};
    Notransform2 = nt{2};
    Notransform3 = nt{3};
else
    Notransform = answer{6};
end
    
%% convergence
conv = answer(7);
conv = strsplit(conv{:}, ' ');
conv1 = conv{1};
conv2 = conv{2};
conv3 = conv{3};
conv4 = conv{4};
conv5 = conv{5};
conv6 = conv{6};

%% metric
metr = answer(8);
if strcmpi(metric,'MI')   
    metr = strsplit(metr{:}, ' ');
    M3 = metr{1};
    M4 = metr{2};
    M5 = metr{3};
    M6 = metr{4};
elseif strcmpi(metric, 'CC')
    metr = strsplit(metr{:}, ' ');
    M3 = metr{1};
    M4 = metr{2};
end

%% shrink-factors
% 8x4x2x1
sf = answer(9);
sf = strsplit(sf{:}, ' ');
sf1 = sf{1};
sf2 = sf{2};
sf3 = sf{3};
sf4 = sf{4}; 

%% smoothing-sigmas
% 3x2x1x0vox
ss = answer(9);
ss = strsplit(ss{:}, ' ');
ss1 = ss{1};
ss2 = ss{2};
ss3 = ss{3};
ss4 = ss{4};
        
    

%% Registration

if strcmpi(transform, 'SyN')
    if strcmpi(metric,'MI')
        dos(['antsRegistration --dimensionality ', dimensionality , ... 
            ' --float ', float, ...
            ' --output [', tm, ',', ri , ...
            '] --interpolation ', interpolation, ...
            ' --winsorize-image-intensities [', wii1, ',', wii2, ...
            '] --use-histogram-matching ', uhm, ...
            ' --initial-moving-transform [', fixed, ',', moving, ... 
            ',1] --transform ', transform, '[', Notransform, ',', ... 
            Notransform2, ',', Notransform3, ...
            '] --metric ', metric, '[', fixed, ',', moving, ',', M3, ',', ... 
            M4, ',', M5, ',', M6, ...
            '] --convergence [', conv1, 'x', conv2, 'x', conv3, ... 
            'x', conv4, ',' conv5, ',', conv6, ... 
            '] --shrink-factors ', sf1, 'x', sf2, 'x', sf3, 'x', sf4, ...
            ' --smoothing-sigmas ', ss1, 'x', ss2, 'x', ss3, 'x', ss4, ... 
            'vox' ]);
    elseif strcmpi(metric, 'CC')
        dos(['antsRegistration --dimensionality ', dimensionality , ... 
            ' --float ', float, ...
            ' --output [', tm, ',', ri , ...
            '] --interpolation ', interpolation, ...
            ' --winsorize-image-intensities [', wii1, ',', wii2, ...
            '] --use-histogram-matching ', uhm, ...
            ' --initial-moving-transform [', fixed, ',', moving, ... 
            ',1] --transform ', transform, '[', Notransform, ',', ...
            Notransform2, ',', Notransform3, ...
            '] --metric ', metric, '[', fixed, ',', moving, ',', M3, ',', M4,... 
            '] --convergence [', conv1, 'x', conv2, 'x', conv3, ... 
            'x', conv4, ',' conv5, ',', conv6, ... 
            '] --shrink-factors ', sf1, 'x',sf2, 'x', sf3, 'x', sf4, ...
            ' --smoothing-sigmas ', ss1, 'x', ss2, 'x', ss3, 'x', ss4, ... 
            'vox' ]);
    end
else
    if strcmpi(metric,'MI')
       dos(['antsRegistration --dimensionality ', dimensionality , ... 
            ' --float ', float, ...
            ' --output [', tm, ',', ri , ...
            '] --interpolation ', interpolation, ...
            ' --winsorize-image-intensities [', wii1, ',', wii2, ...
            '] --use-histogram-matching ', uhm, ...
            ' --initial-moving-transform [', fixed, ',', moving, ... 
            ',1] --transform ', transform, '[', Notransform, ...
            '] --metric ', metric, '[', fixed, ',', ...
            moving, ',', M3, ',', M4, ',', M5, ',', M6, ...
            '] --convergence [', conv1, 'x', conv2, ...
            'x', conv3, 'x', conv4, ',' conv5, ',', conv6, ... 
            '] --shrink-factors ', sf1, 'x', sf2, 'x', sf3, 'x', sf4, ...
            ' --smoothing-sigmas ', ss1, 'x', ss2,'x', ss3, 'x', ss4, ...
            'vox' ]);
    elseif strcmpi(metric, 'CC')
        dos(['antsRegistration --dimensionality ',  dimensionality , ... 
            ' --float ', float, ...
            ' --output [', tm, ',', ri , ...
            '] --interpolation ', interpolation, ...
            ' --winsorize-image-intensities [', wii1, ',', wii2, ...
            '] --use-histogram-matching ', uhm, ...
            ' --initial-moving-transform [', fixed, ',', moving, ...
            ',1] --transform ', transform, '[', Notransform, ...
            '] --metric ', metric, '[', fixed, ',', moving, ',', M3, ',', M4, ...
            '] --convergence [', conv1, 'x', conv2, ...
            'x', conv3, 'x', conv4, ',' conv5, ',', conv6, ...
            '] --shrink-factors ', sf1, 'x', sf2, 'x', sf3, 'x', sf4, ...
            ' --smoothing-sigmas ', ss1, 'x', ss2, 'x', ss3, 'x', ss4, ...
            'vox' ]);
    end
end